#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ —Å –ø–æ–º–æ—â—å—é ruff.
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ.
"""

import subprocess
import sys


def run_ruff_fix():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç ruff –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞."""
    print("üîß –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞...")

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ ruff
        result = subprocess.run(
            ["ruff", "--version"], capture_output=True, text=True, check=False
        )

        if result.returncode != 0:
            print("‚ùå Ruff –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...")
            subprocess.run([sys.executable, "-m", "pip", "install", "ruff"], check=True)
            print("‚úÖ Ruff —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã
        print("\nüìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:")
        subprocess.run(["ruff", "check", "."], check=False)

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —á—Ç–æ –º–æ–∂–Ω–æ
        print("\nüîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏...")
        result = subprocess.run(
            ["ruff", "check", ".", "--fix"], capture_output=True, text=True, check=False
        )

        if result.returncode == 0:
            print("‚úÖ –í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!")
        else:
            print(
                "‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã, –Ω–æ –æ—Å—Ç–∞–ª–∏—Å—å —Ç–µ, —á—Ç–æ —Ç—Ä–µ–±—É—é—Ç —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
            )
            print(result.stdout)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å
        print("\nüìã –û—Å—Ç–∞–≤—à–∏–µ—Å—è –ø—Ä–æ–±–ª–µ–º—ã:")
        subprocess.run(["ruff", "check", "."], check=False)

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–æ–¥
        print("\nüé® –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–æ–¥...")
        subprocess.run(["ruff", "format", "."], check=False)
        print("‚úÖ –ö–æ–¥ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω!")

    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

    return True


def run_ruff_check_only():
    """–¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –±–µ–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞...")
    subprocess.run(["ruff", "check", "."], check=False)


def run_ruff_format_only():
    """–¢–æ–ª—å–∫–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞."""
    print("üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...")
    subprocess.run(["ruff", "format", "."], check=False)


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üöÄ Ruff Code Fixer")
    print("=" * 50)

    if len(sys.argv) > 1:
        command = sys.argv[1].lower()

        if command == "check":
            run_ruff_check_only()
        elif command == "format":
            run_ruff_format_only()
        elif command == "fix":
            run_ruff_fix()
        elif command == "help":
            print_help()
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
            print_help()
    else:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        run_ruff_fix()


def print_help():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é."""
    print("""
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python ruff.py [–∫–æ–º–∞–Ω–¥–∞]

–ö–æ–º–∞–Ω–¥—ã:
  check   - –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ (–±–µ–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è)
  format  - –¢–æ–ª—å–∫–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
  fix     - –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
  help    - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  python ruff.py          # –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
  python ruff.py check    # –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞
  python ruff.py format   # –¢–æ–ª—å–∫–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
  python ruff.py fix      # –Ø–≤–Ω–æ —É–∫–∞–∑–∞—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    """)


if __name__ == "__main__":
    main()
