#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –≥—Ä–æ–º–∫–æ—Å—Ç–∏
"""

import asyncio
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_volume_setter():
    """–¢–µ—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥—Ä–æ–º–∫–æ—Å—Ç–∏"""
    try:
        from commands.music.playback import HarmonyPlayer
        
        # –°–æ–∑–¥–∞–µ–º –º–æ–∫ –ø–ª–µ–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        class MockPlayer(HarmonyPlayer):
            def __init__(self):
                self._volume = 100
                self.text_channel = None
                self.guild = None
                self._node = None
            
            async def set_filters(self, filters):
                logger.info(f"Mock set_filters called with volume: {getattr(filters, 'volume', 'N/A')}")
        
        player = MockPlayer()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –≥—Ä–æ–º–∫–æ—Å—Ç–∏
        logger.info(f"Initial volume: {player.volume}")
        
        player.volume = 50
        logger.info(f"After setting to 50: {player.volume}")
        
        player.volume = 150
        logger.info(f"After setting to 150: {player.volume}")
        
        player.volume = 0
        logger.info(f"After setting to 0: {player.volume}")
        
        player.volume = 250  # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ –¥–æ 200
        logger.info(f"After setting to 250 (should be 200): {player.volume}")
        
        logger.info("‚úÖ Volume setter test completed successfully")
        
    except Exception as e:
        logger.error(f"‚ùå Volume setter test failed: {e}")

async def test_mongo_service():
    """–¢–µ—Å—Ç MongoDB —Å–µ—Ä–≤–∏—Å–∞"""
    try:
        from services import mongo_service
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥—Ä–æ–º–∫–æ—Å—Ç–∏
        test_guild_id = 123456789
        
        # –¢–µ—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥—Ä–æ–º–∫–æ—Å—Ç–∏
        success = await mongo_service.set_guild_volume(test_guild_id, 75)
        logger.info(f"Set volume result: {success}")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
        volume = await mongo_service.get_guild_volume(test_guild_id)
        logger.info(f"Retrieved volume: {volume}")
        
        logger.info("‚úÖ MongoDB service test completed successfully")
        
    except Exception as e:
        logger.error(f"‚ùå MongoDB service test failed: {e}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logger.info("üöÄ Starting volume tests...")
    
    await test_volume_setter()
    await test_mongo_service()
    
    logger.info("‚úÖ All tests completed!")

if __name__ == "__main__":
    asyncio.run(main()) 