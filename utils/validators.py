from urllib.parse import urlparse
import re
import discord
import logging
from typing import Optional, Union, Any

logger = logging.getLogger(__name__)

def is_valid_url(url: str) -> bool:
    """‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ URL"""
    pattern = re.compile(
        r'^https?://(?:[-\w.]|(?:%[\da-fA-F]{2}))+'
    )
    return bool(pattern.match(url))

def is_spotify_url(url: str) -> bool:
    """üéµ –ü—Ä–æ–≤–µ—Ä–∫–∞ Spotify URL"""
    parsed = urlparse(url)
    return parsed.netloc in ['open.spotify.com', 'spotify.com'] and \
           any(x in parsed.path for x in ['track', 'playlist', 'album'])

def is_player_owner(player: Any, user: Union[discord.Member, discord.User]) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –ø–ª–µ–µ—Ä–∞.
    
    Args:
        player: –≠–∫–∑–µ–º–ø–ª—è—Ä –ø–ª–µ–µ—Ä–∞
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        
    Returns:
        bool: True –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –ø–ª–µ–µ—Ä–∞
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫
        current_track = getattr(player, 'current', None)
        if current_track and hasattr(current_track, 'requester'):
            if current_track.requester and current_track.requester.id == user.id:
                return True
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–π —Ç—Ä–µ–∫ –≤ –ø–ª–µ–π–ª–∏—Å—Ç–µ (–∫—Ç–æ –∑–∞–ø—É—Å—Ç–∏–ª)
        if hasattr(player, 'playlist') and player.playlist:
            first_track = player.playlist[0]
            if hasattr(first_track, 'requester') and first_track.requester:
                if first_track.requester.id == user.id:
                    return True
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º requester –∏–∑ view
        if hasattr(player, 'view') and player.view:
            view_requester = getattr(player.view, 'requester', None)
            if view_requester and view_requester.id == user.id:
                return True
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞
        if hasattr(user, 'guild_permissions') and user.guild_permissions.administrator:
            return True
            
        return False
        
    except Exception as e:
        logger.error(f"Error checking player ownership: {e}")
        return False

async def check_player_ownership(
    interaction: discord.Interaction, 
    player: Any,
    error_message: str = "‚ùå –≠—Ç–æ –Ω–µ –í–∞—à –ø–ª–µ–µ—Ä! –¢–æ–ª—å–∫–æ —Ç–æ—Ç, –∫—Ç–æ –∑–∞–ø—É—Å—Ç–∏–ª –º—É–∑—ã–∫—É, –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –µ—é."
) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞ –ø–ª–µ–µ—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–ª–∞–¥–µ–ª–µ—Ü.
    
    Args:
        interaction: Discord interaction
        player: –≠–∫–∑–µ–º–ø–ª—è—Ä –ø–ª–µ–µ—Ä–∞
        error_message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        
    Returns:
        bool: True –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –ø–ª–µ–µ—Ä–∞
    """
    if not is_player_owner(player, interaction.user):
        try:
            if not interaction.response.is_done():
                await interaction.response.send_message(error_message, ephemeral=True)
            else:
                await interaction.followup.send(error_message, ephemeral=True)
        except Exception as e:
            logger.error(f"Error sending ownership error message: {e}")
        return False
    return True
