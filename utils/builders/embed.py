import discord
from config.constants import Colors, get_emoji
import wavelink


def buildEmbed(
    inter: discord.Interaction,
    title: str,
    description: str,
    include_avatar: bool = True,
) -> discord.Embed:
    embed = discord.Embed(
        title=title, description=description, color=Colors.INFO
    ).set_image(url=Colors.line)

    if include_avatar:
        embed.set_thumbnail(url=inter.user.display_avatar)

    return embed


def get_volume_emoji(
    volume: int, color: str = "default", custom_emojis: dict = None
) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —ç–º–æ–¥–∑–∏ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è"""
    if volume == 0:
        return get_emoji("NK_VOLUM_M", color, custom_emojis)
    elif volume < 50:
        return get_emoji("NK_VOLUM_M", color, custom_emojis)
    elif volume < 100:
        return get_emoji("NK_VOLUME", color, custom_emojis)
    else:
        return get_emoji("NK_VOLUM_P", color, custom_emojis)


def build_volume_embed(
    volume: int,
    color: str = "default",
    custom_emojis: dict = None,
    embed_color: int = Colors.SUCCESS,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏"""
    volume_emoji = get_volume_emoji(volume, color, custom_emojis)
    return discord.Embed(
        description=f"{volume_emoji} –ì—Ä–æ–º–∫–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ **{volume}%**",
        color=embed_color,
    )


def build_volume_control_embed(
    volume: int,
    color: str = "default",
    custom_emojis: dict = None,
    embed_color: int = Colors.INFO,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç—å—é —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏"""
    return discord.Embed(
        title="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç—å—é",
        description=f"**–¢–µ–∫—É—â–∞—è –≥—Ä–æ–º–∫–æ—Å—Ç—å:** {volume}%",
        color=embed_color,
    )


def build_music_status_embed(
    guild_name: str,
    current_track=None,
    queue_count: int = 0,
    is_paused: bool = False,
    loop_mode: str = "–í—ã–∫–ª—é—á–µ–Ω",
    volume: int = 100,
    color: str = "default",
    custom_emojis: dict = None,
    embed_color: int = Colors.MUSIC,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ –ø–ª–µ–µ—Ä–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏"""
    embed = discord.Embed(
        title=f"üéµ –°—Ç–∞—Ç—É—Å –ø–ª–µ–µ—Ä–∞ ‚Äî {guild_name[:30]}", color=embed_color
    )

    # –¢–µ–∫—É—â–∏–π —Ç—Ä–µ–∫
    if current_track:
        track_info = f"**{current_track.title}** ‚Äî {current_track.author}"
        status_emoji = (
            get_emoji("NK_MUSICPAUSE", color, custom_emojis)
            if is_paused
            else get_emoji("NK_MUSICPLAY", color, custom_emojis)
        )
        status = f"{status_emoji} –ü–∞—É–∑–∞" if is_paused else f"{status_emoji} –ò–≥—Ä–∞–µ—Ç"
        embed.add_field(
            name="–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç", value=f"{status} {track_info}", inline=False
        )
    else:
        embed.add_field(name="–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç", value="‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç", inline=False)

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–µ–µ—Ä–µ
    embed.add_field(name="–¢—Ä–µ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏", value=str(queue_count), inline=True)
    embed.add_field(name="–ü–æ–≤—Ç–æ—Ä", value=loop_mode, inline=True)

    # –ì—Ä–æ–º–∫–æ—Å—Ç—å —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º —ç–º–æ–¥–∑–∏
    volume_emoji = get_volume_emoji(volume, color, custom_emojis)
    embed.add_field(name="–ì—Ä–æ–º–∫–æ—Å—Ç—å", value=f"{volume_emoji} {volume}%", inline=True)

    return embed


def build_skip_embed(
    track,
    color: str = "default",
    custom_emojis: dict = None,
    embed_color: int = Colors.SUCCESS,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —Ç—Ä–µ–∫–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏"""
    skip_emoji = get_emoji("NK_NEXT", color, custom_emojis)
    track_info = f"**{track.title}** ‚Äî {track.author}"
    return discord.Embed(
        description=f"{skip_emoji} –ü—Ä–æ–ø—É—â–µ–Ω —Ç—Ä–µ–∫: {track_info}",
        color=embed_color,
    )


def build_pause_embed(
    color: str = "default",
    custom_emojis: dict = None,
    embed_color: int = Colors.WARNING,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è –ø–∞—É–∑—ã —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏"""
    pause_emoji = get_emoji("NK_MUSICPAUSE", color, custom_emojis)
    return discord.Embed(
        description=f"{pause_emoji} –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
        color=embed_color,
    )


def build_resume_embed(
    color: str = "default",
    custom_emojis: dict = None,
    embed_color: int = Colors.SUCCESS,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏"""
    play_emoji = get_emoji("NK_MUSICPLAY", color, custom_emojis)
    return discord.Embed(
        description=f"{play_emoji} –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–æ",
        color=embed_color,
    )


def build_stop_embed(
    color: str = "default",
    custom_emojis: dict = None,
    embed_color: int = Colors.WARNING,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏"""
    stop_emoji = get_emoji("NK_LEAVE", color, custom_emojis)
    return discord.Embed(
        description=f"{stop_emoji} –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –æ—á–µ—Ä–µ–¥—å –æ—á–∏—â–µ–Ω–∞",
        color=embed_color,
    )


def build_shuffle_embed(
    queue_size: int,
    color: str = "default",
    custom_emojis: dict = None,
    embed_color: int = Colors.SUCCESS,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –æ—á–µ—Ä–µ–¥–∏ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏"""
    shuffle_emoji = get_emoji("NK_RANDOM", color, custom_emojis)
    return discord.Embed(
        description=f"{shuffle_emoji} –û—á–µ—Ä–µ–¥—å –ø–µ—Ä–µ–º–µ—à–∞–Ω–∞ ({queue_size} —Ç—Ä–µ–∫–æ–≤)",
        color=embed_color,
    )


def build_loop_embed(
    mode: str,
    color: str = "default",
    custom_emojis: dict = None,
    embed_color: int = Colors.SUCCESS,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –ø–æ–≤—Ç–æ—Ä–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏"""
    loop_emoji = get_emoji("NK_POVTOR", color, custom_emojis)

    mode_text = {
        "none": "–ü–æ–≤—Ç–æ—Ä –≤—ã–∫–ª—é—á–µ–Ω",
        "track": "–ü–æ–≤—Ç–æ—Ä —Ç—Ä–µ–∫–∞",
        "queue": "–ü–æ–≤—Ç–æ—Ä –æ—á–µ—Ä–µ–¥–∏",
    }.get(mode.lower(), "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º")

    return discord.Embed(
        description=f"{loop_emoji} {mode_text}",
        color=embed_color,
    )


def build_track_added_embed(
    track,
    position: int,
    color: str = "default",
    custom_emojis: dict = None,
    embed_color: int = Colors.SUCCESS,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ç—Ä–µ–∫–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏"""
    add_emoji = get_emoji("NK_HEART", color, custom_emojis)
    track_info = f"**{track.title}** ‚Äî {track.author}"
    position_text = f"–ø–æ–∑–∏—Ü–∏—è {position}" if position > 0 else "—Å–ª–µ–¥—É—é—â–∏–π"

    return discord.Embed(
        description=f"{add_emoji} –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å ({position_text}): {track_info}",
        color=embed_color,
    )


def build_connection_error_embed(
    message: str = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É",
    embed_color: int = Colors.ERROR,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    return discord.Embed(
        title="–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è", description=message, color=embed_color
    )


def build_permission_error_embed(
    message: str = "–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ",
    embed_color: int = Colors.ERROR,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è –æ—à–∏–±–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"""
    return discord.Embed(title="–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞", description=message, color=embed_color)


def build_search_error_embed(
    query: str,
    embed_color: int = Colors.ERROR,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è –æ—à–∏–±–∫–∏ –ø–æ–∏—Å–∫–∞"""
    safe_query = query[:100] if len(query) > 100 else query
    return discord.Embed(
        title="–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞",
        description=f"–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É: `{safe_query}`",
        color=embed_color,
    )


def build_disconnect_embed(
    reason: str = "–≤—Å–µ –≤—ã—à–ª–∏",
    embed_color: int = Colors.WARNING,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞"""
    return discord.Embed(
        description=f"‚Äî„Éª–í—ã—Ö–æ–¥ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞\n–Ø –ø–æ–∫–∏–Ω—É–ª–∞ –∫–∞–Ω–∞–ª, –ø–æ—Ç–æ–º—É —á—Ç–æ {reason} —á—Ç–æ–±—ã –Ω–µ –Ω–∞–≥—Ä—É–∂–∞—Ç—å —Å–µ—Ä–≤–µ—Ä –±–æ—Ç–∞ –µ—Å–ª–∏ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç—É –≤ –∫–∞–Ω–∞–ª–µ",
        color=embed_color,
    )


def build_no_next_track_embed(
    color: str = "default",
    custom_emojis: dict = None,
    embed_color: int = Colors.WARNING,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç—Ä–µ–∫–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏"""
    next_emoji = get_emoji("NK_NEXT", color, custom_emojis)
    return discord.Embed(
        description=f"{next_emoji} –ù–µ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç—Ä–µ–∫–∞ –≤ –æ—á–µ—Ä–µ–¥–∏",
        color=embed_color,
    )


def build_no_previous_track_embed(
    color: str = "default",
    custom_emojis: dict = None,
    embed_color: int = Colors.WARNING,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏"""
    back_emoji = get_emoji("NK_BACK", color, custom_emojis)
    return discord.Embed(
        description=f"{back_emoji} –ù–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞ –≤ –æ—á–µ—Ä–µ–¥–∏",
        color=embed_color,
    )


def build_navigation_error_embed(
    direction: str = "–Ω–∞–≤–∏–≥–∞—Ü–∏—è",
    color: str = "default",
    custom_emojis: dict = None,
    embed_color: int = Colors.WARNING,
) -> discord.Embed:
    """–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è –æ—à–∏–±–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏"""
    if direction == "next":
        emoji = get_emoji("NK_NEXT", color, custom_emojis)
        text = "–ù–µ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç—Ä–µ–∫–∞"
    elif direction == "previous":
        emoji = get_emoji("NK_BACK", color, custom_emojis)
        text = "–ù–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞"
    else:
        emoji = "‚ùå"
        text = "–û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"

    return discord.Embed(
        description=f"{emoji} {text}",
        color=embed_color,
    )


def build_track_finished_embed(
    track: wavelink.Playable,
    position: int,
    color: str = "default",
    custom_emojis: dict = None,
    embed_color: int = None,
) -> discord.Embed:
    """‚èπÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–≥–æ —Ç—Ä–µ–∫–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏"""
    from config.constants import get_emoji, Colors

    artist = getattr(track, "author", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å")
    title = getattr(track, "title", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç—Ä–µ–∫")
    uri = getattr(track, "uri", "")
    artwork = getattr(track, "artwork", None)

    track_link = f"**[{title}]({uri})**" if uri else f"**{title}**"

    # –í—Ä–µ–º—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è (–ø–æ–∑–∏—Ü–∏—è)
    from ui.music_embeds import format_duration

    listened_time = format_duration(int(position))

    # –ü–æ–ª—É—á–∞–µ–º —ç–º–æ–¥–∑–∏
    status_emoji = get_emoji("NK_MusicPlay", color, custom_emojis)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç —ç–º–±–µ–¥–∞
    if embed_color is None:
        try:
            guild_id = getattr(track, "guild_id", None)
            if guild_id:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–≤–µ—Ç–∞
                embed_color = Colors.PRIMARY
            else:
                embed_color = Colors.PRIMARY
        except Exception:
            embed_color = Colors.PRIMARY

    embed = discord.Embed(
        title=artist,
        description=f"{track_link}\n\n**{status_emoji} –°—Ç–∞—Ç—É—Å:** –ü—Ä–æ—Å–ª—É—à–∞–Ω–æ ({listened_time})",
        color=embed_color,
        timestamp=discord.utils.utcnow(),
    )

    if artwork:
        embed.set_thumbnail(url=artwork)

    return embed
