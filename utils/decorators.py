from discord.ext import commands
from typing import Callable, Optional
from discord import Guild, Member
from ui.embeds import create_error_embed


def has_dj_role() -> Callable:
    """üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–æ–ª–∏ DJ"""
    async def predicate(ctx: commands.Context) -> bool:
        if not ctx.guild:
            raise commands.NoPrivateMessage("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")

        guild_data = await ctx.bot.db.get_guild(ctx.guild.id)
        if not guild_data:
            raise commands.CheckFailure("–î–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

        if ctx.author.guild_permissions.administrator:
            return True

        if not guild_data.dj_role:
            return True

        if guild_data.dj_role in [r.id for r in ctx.author.roles]:
            return True

        raise commands.CheckFailure("‚ùå –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å DJ.")
    
    return commands.check(predicate)


def restrict_command() -> Callable:
    """üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∫–æ–º–∞–Ω–¥—ã"""
    async def predicate(ctx: commands.Context) -> bool:
        if not ctx.guild:
            raise commands.NoPrivateMessage("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")

        guild_data = await ctx.bot.db.get_guild(ctx.guild.id)
        if not guild_data:
            raise commands.CheckFailure("–î–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

        command_name = ctx.command.name
        restriction = guild_data.restrictions.get(command_name)

        if not restriction:
            return True

        if ctx.author.guild_permissions.administrator:
            return True

        if restriction in [str(role.id) for role in ctx.author.roles]:
            return True

        raise commands.CheckFailure(f"‚ùå –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å <@&{restriction}>.")
    
    return commands.check(predicate)
