import logging
import asyncio
from typing import Optional
from lyricsgenius import Genius
from config.settings import Settings

class LyricsService:
    """üìù –°–µ—Ä–≤–∏—Å –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤ –ø–µ—Å–µ–Ω"""
    
    def __init__(self):
        self.logger = logging.getLogger('LyricsService')
        if Settings.GENIUS_ACCESS_TOKEN:
            self.genius = Genius(Settings.GENIUS_ACCESS_TOKEN)
            self.genius.verbose = False
        else:
            self.genius = None
            self.logger.warning("‚ö†Ô∏è Genius API –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω")
    
    async def get_lyrics(self, title: str, artist: str = "") -> Optional[str]:
        """üìù –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Å–Ω–∏"""
        if not self.genius:
            return None

        try:
            song = await asyncio.to_thread(self.genius.search_song, title, artist)
            if song:
                return song.lyrics
            return None
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞: {e}")
            return None
