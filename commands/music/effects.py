import discord
from discord.ext import commands
from typing import Optional
from config.constants import Emojis, Colors
from core.player import HarmonyPlayer
from ui.embeds import create_error_embed

class EffectsCommands(commands.Cog, name="üéöÔ∏è –≠—Ñ—Ñ–µ–∫—Ç—ã"):
    """üéöÔ∏è –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–≤—É–∫–æ–≤—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏"""

    def __init__(self, bot):
        self.bot = bot

    @commands.command(name='bassboost', aliases=['bass'])
    async def bass_boost_command(self, ctx, state: Optional[bool] = None):
        """
        üéõÔ∏è –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –±–∞—Å–±—É—Å—Ç–∞

        –ü—Ä–∏–º–µ—Ä—ã:
        {prefix}bassboost - –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
        {prefix}bassboost on - –í–∫–ª—é—á–∏—Ç—å
        {prefix}bassboost off - –í—ã–∫–ª—é—á–∏—Ç—å
        """
        player: HarmonyPlayer = ctx.voice_client
        if not player:
            return await ctx.reply(embed=create_error_embed(
                "–ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!"
            ))

        new_state = not player.state.bass_boost if state is None else state
        await player.set_effects(bass=new_state)

        embed = discord.Embed(
            title=f"{Emojis.BASS} –ë–∞—Å–±—É—Å—Ç {'–≤–∫–ª—é—á–µ–Ω' if new_state else '–≤—ã–∫–ª—é—á–µ–Ω'}",
            color=Colors.SUCCESS
        )
        await ctx.reply(embed=embed)

    @commands.command(name='nightcore')
    async def nightcore_command(self, ctx, state: Optional[bool] = None):
        """üåô –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞–π—Ç–∫–æ—Ä —ç—Ñ—Ñ–µ–∫—Ç–∞"""
        player: HarmonyPlayer = ctx.voice_client
        if not player:
            return await ctx.reply(embed=create_error_embed(
                "–ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!"
            ))

        new_state = not player.state.nightcore if state is None else state
        await player.set_effects(nightcore=new_state)

        embed = discord.Embed(
            title=f"{Emojis.NIGHTCORE} –ù–∞–π—Ç–∫–æ—Ä {'–≤–∫–ª—é—á–µ–Ω' if new_state else '–≤—ã–∫–ª—é—á–µ–Ω'}",
            color=Colors.SUCCESS
        )
        await ctx.reply(embed=embed)

    @commands.command(name='vaporwave')
    async def vaporwave_command(self, ctx, state: Optional[bool] = None):
        """üåä –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –≤–µ–π–ø–æ—Ä–≤–µ–π–≤ —ç—Ñ—Ñ–µ–∫—Ç–∞"""
        player: HarmonyPlayer = ctx.voice_client
        if not player:
            return await ctx.reply(embed=create_error_embed(
                "–ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!"
            ))

        new_state = not player.state.vaporwave if state is None else state
        await player.set_effects(vaporwave=new_state)

        embed = discord.Embed(
            title=f"{Emojis.VAPORWAVE} –í–µ–π–ø–æ—Ä–≤–µ–π–≤ {'–≤–∫–ª—é—á–µ–Ω' if new_state else '–≤—ã–∫–ª—é—á–µ–Ω'}",
            color=Colors.SUCCESS
        )
        await ctx.reply(embed=embed)
async def setup(bot):
    await bot.add_cog(EffectsCommands(bot))
