
import discord
from discord.ext import commands

from config.constants import Colors, Emojis
from ui.embeds import create_error_embed, create_queue_embed


class QueueCommands(commands.Cog, name="üìã –û—á–µ—Ä–µ–¥—å"):
    """üìã –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—á–µ—Ä–µ–¥—å—é –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è"""

    def __init__(self, bot):
        self.bot = bot

    @commands.command(name='queue', aliases=['q'])
    async def queue_command(self, ctx, page: int = 1):
        """
        üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—á–µ—Ä–µ–¥–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è

        –ü—Ä–∏–º–µ—Ä:
        {prefix}queue 2 - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—á–µ—Ä–µ–¥–∏
        """
        player = ctx.voice_client
        if not player or not player.queue:
            return await ctx.reply(embed=create_error_embed(
                "–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞!"
            ))

        embed = create_queue_embed(player.queue, page, player.current)
        await ctx.reply(embed=embed)

    @commands.command(name='clear')
    async def clear_command(self, ctx):
        """üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏"""
        player = ctx.voice_client
        if not player:
            return await ctx.reply(embed=create_error_embed(
                "–ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!"
            ))

        player.queue.clear()
        embed = discord.Embed(
            title=f"{Emojis.CLEAR} –û—á–µ—Ä–µ–¥—å –æ—á–∏—â–µ–Ω–∞",
            color=Colors.SUCCESS
        )
        await ctx.reply(embed=embed)

    @commands.command(name='remove', aliases=['rm'])
    async def remove_command(self, ctx, index: int):
        """
        ‚ûñ –£–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –ø–æ –∏–Ω–¥–µ–∫—Å—É

        –ü—Ä–∏–º–µ—Ä:
        {prefix}remove 3
        """
        player = ctx.voice_client
        if not player or not player.queue:
            return await ctx.reply(embed=create_error_embed(
                "–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞!"
            ))

        if index < 1 or index > len(player.queue):
            return await ctx.reply(embed=create_error_embed(
                f"–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –∏–Ω–¥–µ–∫—Å! –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç 1 –¥–æ {len(player.queue)}"
            ))

        removed_track = player.queue.pop(index - 1)
        embed = discord.Embed(
            title=f"{Emojis.REMOVE} –¢—Ä–µ–∫ —É–¥–∞–ª–µ–Ω",
            description=f"{removed_track.title}",
            color=Colors.WARNING
        )
        await ctx.reply(embed=embed)

    @commands.command(name='shuffle')
    async def shuffle_command(self, ctx):
        """üîÄ –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ –æ—á–µ—Ä–µ–¥–∏"""
        player = ctx.voice_client
        if not player or not player.queue:
            return await ctx.reply(embed=create_error_embed(
                "–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞!"
            ))

        player.queue.shuffle()
        embed = discord.Embed(
            title=f"{Emojis.SHUFFLE} –û—á–µ—Ä–µ–¥—å –ø–µ—Ä–µ–º–µ—à–∞–Ω–∞",
            color=Colors.SUCCESS
        )
        await ctx.reply(embed=embed)
async def setup(bot):
    await bot.add_cog(QueueCommands(bot))
