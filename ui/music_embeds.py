"""
üéµ Embed'—ã –¥–ª—è –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä–æ–≤
"""

import discord
import wavelink
from typing import List, Optional

from config.constants import Colors
from ui.embed_now_playing import create_progress_bar
from utils.builders.embed import build_volume_embed
from utils.formatters import (
    format_duration,
    format_track_info,
    format_track_title,
    format_requester_info,
    format_queue_position,
    truncate_text,
)


def create_queue_embed(
    guild: discord.Guild,
    now_playing: wavelink.Playable,
    queue: List[wavelink.Playable],
    page: int,
    total_pages: int,
    user: discord.User,
) -> discord.Embed:
    """üìÑ –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –æ—á–µ—Ä–µ–¥–∏ —Ç—Ä–µ–∫–æ–≤"""
    if not queue and not now_playing:
        embed = discord.Embed(
            title="‚Äî„Éª–ü—É—Å—Ç–∞—è –æ—á–µ—Ä–µ–¥—å —Å–µ—Ä–≤–µ—Ä–∞",
            description="–Ø –ø–æ–∫–∏–Ω—É–ª–∞ –∫–∞–Ω–∞–ª, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å —Ç—Ä–µ–∫–æ–≤",
            color=Colors.MUSIC,
        )
        return embed
    embed = discord.Embed(title=f"‚Äî„Éª–û—á–µ—Ä–µ–¥—å —Å–µ—Ä–≤–µ—Ä–∞ {guild.name}", color=Colors.MUSIC)

    # –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç
    if now_playing:
        duration = format_duration(now_playing.length or 0)
        requester_info = format_requester_info(getattr(now_playing, "requester", None))
        track_title = format_track_title(now_playing, max_length=45)

        embed.description = (
            f"**–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç:** [{track_title}]({now_playing.uri}) "
            f"| {duration} | {requester_info}\n"
        )
    else:
        embed.description = "**–ù–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç**\n"

    # –¢—Ä–µ–∫–∏ –≤ –æ—á–µ—Ä–µ–¥–∏
    if queue:
        queue_lines = []
        for i, track in enumerate(queue, start=1):
            duration = format_duration(track.length or 0)
            requester_info = format_requester_info(getattr(track, "requester", None))
            track_title = format_track_title(track, max_length=40)

            line = (
                f"**{i})** [{track_title}]({track.uri}) | {duration} | {requester_info}"
            )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç Discord (4096 —Å–∏–º–≤–æ–ª–æ–≤)
            current_description = (
                embed.description + "\n".join(queue_lines) + "\n" + line
            )
            if len(current_description) > 3900:  # –û—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∞—Å
                queue_lines.append("...–∏ –¥—Ä—É–≥–∏–µ —Ç—Ä–µ–∫–∏.")
                break

            queue_lines.append(line)

        embed.description += "\n" + "\n".join(queue_lines)
    else:
        embed.description += "\n*–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞*"

    embed.set_thumbnail(url=user.display_avatar.url)
    embed.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞: {page}/{total_pages}")
    return embed


def create_track_embed(
    track: wavelink.Playable, requester: discord.Member, position: int, duration: int
) -> discord.Embed:
    """üéµ –°–æ–∑–¥–∞–Ω–∏–µ embed –≤ —Å—Ç–∏–ª–µ Spotify"""

    artist = getattr(track, "author", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å")
    title = getattr(track, "title", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç—Ä–µ–∫")
    uri = getattr(track, "uri", "")

    # –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–µ–∫
    track_link = f"**[{title}]({uri})**" if uri else f"**{title}**"

    # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    progress_bar = create_progress_bar(position, duration, 9)

    # –í—Ä–µ–º—è
    current_time = format_duration(int(position))
    total_time = format_duration(int(duration)) if duration else "‚àû"

    # –û–ø–∏—Å–∞–Ω–∏–µ
    description = f"{track_link}\n\n"
    description += f"> –ó–∞–ø—Ä–æ—Å –æ—Ç {requester.display_name}:\n"
    description += f"{progress_bar}\n\n"
    description += f"–ò–≥—Ä–∞–µ—Ç ‚Äî `[{current_time}/{total_time}]`"

    embed = discord.Embed(title=artist, description=description, color=Colors.SPOTIFY)

    # –û–±–ª–æ–∂–∫–∞
    artwork = getattr(track, "artwork", None)
    if artwork:
        embed.set_thumbnail(url=artwork)

    return embed


def create_playlist_embed(playlist_name: str, track_count: int) -> discord.Embed:
    """üìã –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –ø–ª–µ–π–ª–∏—Å—Ç–∞"""
    playlist_display = truncate_text(playlist_name, 80)
    return discord.Embed(
        description=f'–î–æ–±–∞–≤–ª–µ–Ω –ø–ª–µ–π–ª–∏—Å—Ç "**{playlist_display}**" ({track_count} —Ç—Ä–µ–∫–æ–≤)',
        color=Colors.SUCCESS,
    )


def create_track_added_embed(track: wavelink.Playable, position: int) -> discord.Embed:
    """‚ûï –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ç—Ä–µ–∫–∞"""
    track_info = format_track_info(track)
    position_text = format_queue_position(position)

    return discord.Embed(
        description=f"–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å ({position_text}): {track_info}",
        color=Colors.SUCCESS,
    )


def create_now_playing_embed(
    track: wavelink.Playable, player, requester: Optional[discord.Member] = None
) -> discord.Embed:
    """‚ñ∂Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º–æ–≥–æ —Ç—Ä–µ–∫–∞ –≤ Spotify-—Å—Ç–∏–ª–µ"""
    artist = getattr(track, "author", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å")
    title = getattr(track, "title", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç—Ä–µ–∫")
    uri = getattr(track, "uri", "")
    artwork = getattr(track, "artwork", None)
    position = int(getattr(player, "position", 0) or 0)
    duration = getattr(track, "length", 0)

    track_link = f"**[{title}]({uri})**" if uri else f"**{title}**"
    progress = f"{format_duration(position)}/{format_duration(duration)}"

    embed = discord.Embed(
        title=artist,
        description=f"{track_link}\n\n**–ò–≥—Ä–∞–µ—Ç ‚Äî [{progress}]**",
        color=Colors.SUCCESS,
        timestamp=discord.utils.utcnow(),
    )

    if artwork:
        embed.set_thumbnail(url=artwork)
    if requester:
        embed.set_footer(text=f"–ó–∞–ø—Ä–æ—Å–∏–ª: {requester.display_name}")

    return embed


def create_empty_queue_embed() -> discord.Embed:
    """üö™ –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –ø—É—Å—Ç–æ–π –æ—á–µ—Ä–µ–¥–∏"""
    return discord.Embed(
        description=(
            "‚Äî„Éª–ü—É—Å—Ç–∞—è –æ—á–µ—Ä–µ–¥—å —Å–µ—Ä–≤–µ—Ä–∞\n"
            "–Ø –ø–æ–∫–∏–Ω—É–ª–∞ –∫–∞–Ω–∞–ª, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å —Ç—Ä–µ–∫–æ–≤"
        ),
        color=Colors.PRIMARY,
        timestamp=discord.utils.utcnow(),
    )


def create_track_finished_embed(
    track: wavelink.Playable, position: int
) -> discord.Embed:
    """‚èπÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–≥–æ —Ç—Ä–µ–∫–∞ –≤ Spotify-—Å—Ç–∏–ª–µ"""

    artist = getattr(track, "author", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å")
    title = getattr(track, "title", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç—Ä–µ–∫")
    uri = getattr(track, "uri", "")
    artwork = getattr(track, "artwork", None)

    track_link = f"**[{title}]({uri})**" if uri else f"**{title}**"

    # –í—Ä–µ–º—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è (–ø–æ–∑–∏—Ü–∏—è)
    listened_time = format_duration(int(position))

    embed = discord.Embed(
        title=artist,
        description=f"{track_link}\n\n**> –°—Ç–∞—Ç—É—Å:** –ü—Ä–æ—Å–ª—É—à–∞–Ω–æ ({listened_time})",
        color=Colors.PRIMARY,
        timestamp=discord.utils.utcnow(),
    )

    if artwork:
        embed.set_thumbnail(url=artwork)

    return embed


def create_search_error_embed(query: str) -> discord.Embed:
    """‚ùå –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –æ—à–∏–±–∫–∏ –ø–æ–∏—Å–∫–∞"""
    safe_query = truncate_text(query, 100)
    return discord.Embed(
        title="–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞",
        description=f"–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É: `{safe_query}`",
        color=Colors.ERROR,
    )


def create_connection_error_embed(
    message: str = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É",
) -> discord.Embed:
    """üîå –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    return discord.Embed(
        title="–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è", description=message, color=Colors.ERROR
    )


def create_permission_error_embed(
    message: str = "–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ",
) -> discord.Embed:
    """üö´ –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –æ—à–∏–±–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"""
    return discord.Embed(
        title="–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞", description=message, color=Colors.ERROR
    )


def create_music_status_embed(
    guild_name: str,
    current_track: Optional[wavelink.Playable] = None,
    queue_count: int = 0,
    is_paused: bool = False,
    loop_mode: str = "–í—ã–∫–ª—é—á–µ–Ω",
    volume: int = 100,
) -> discord.Embed:
    """üìä –°–æ–∑–¥–∞–Ω–∏–µ embed —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ –ø–ª–µ–µ—Ä–∞"""
    embed = discord.Embed(
        title=f"üéµ –°—Ç–∞—Ç—É—Å –ø–ª–µ–µ—Ä–∞ ‚Äî {truncate_text(guild_name, 30)}", color=Colors.MUSIC
    )

    # –¢–µ–∫—É—â–∏–π —Ç—Ä–µ–∫
    if current_track:
        track_info = format_track_info(current_track)
        status = "‚è∏Ô∏è –ü–∞—É–∑–∞" if is_paused else "‚ñ∂Ô∏è –ò–≥—Ä–∞–µ—Ç"
        embed.add_field(
            name="–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç", value=f"{status} {track_info}", inline=False
        )
    else:
        embed.add_field(name="–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç", value="‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç", inline=False)

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–µ–µ—Ä–µ
    embed.add_field(name="–¢—Ä–µ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏", value=str(queue_count), inline=True)
    embed.add_field(name="–ü–æ–≤—Ç–æ—Ä", value=loop_mode, inline=True)
    embed.add_field(name="–ì—Ä–æ–º–∫–æ—Å—Ç—å", value=f"{volume}%", inline=True)

    return embed


def create_volume_embed(
    volume: int,
    color: str = "default",
    custom_emojis: dict = None,
) -> discord.Embed:
    """üîä –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏"""
    return build_volume_embed(
        volume=volume,
        color=color,
        custom_emojis=custom_emojis,
        embed_color=Colors.SUCCESS,
    )


def create_skip_embed(track: wavelink.Playable) -> discord.Embed:
    """‚è≠Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —Ç—Ä–µ–∫–∞"""
    track_info = format_track_info(track)
    return discord.Embed(
        description=f"‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω —Ç—Ä–µ–∫: {track_info}", color=Colors.SUCCESS
    )


def create_pause_embed() -> discord.Embed:
    """‚è∏Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –ø–∞—É–∑—ã"""
    return discord.Embed(
        description="‚è∏Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ", color=Colors.WARNING
    )


def create_resume_embed() -> discord.Embed:
    """‚ñ∂Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
    return discord.Embed(
        description="‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–æ", color=Colors.SUCCESS
    )


def create_stop_embed() -> discord.Embed:
    """‚èπÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    return discord.Embed(
        description="‚èπÔ∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –æ—á–µ—Ä–µ–¥—å –æ—á–∏—â–µ–Ω–∞",
        color=Colors.WARNING,
    )


def create_shuffle_embed(queue_size: int) -> discord.Embed:
    """üîÄ –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –æ—á–µ—Ä–µ–¥–∏"""
    return discord.Embed(
        description=f"üîÄ –û—á–µ—Ä–µ–¥—å –ø–µ—Ä–µ–º–µ—à–∞–Ω–∞ ({queue_size} —Ç—Ä–µ–∫–æ–≤)", color=Colors.SUCCESS
    )


def create_loop_embed(mode: str) -> discord.Embed:
    """üîÅ –°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –ø–æ–≤—Ç–æ—Ä–∞"""
    mode_emoji = {"none": "‚ùå", "track": "üîÇ", "queue": "üîÅ"}.get(mode.lower(), "‚ùì")

    mode_text = {
        "none": "–ü–æ–≤—Ç–æ—Ä –≤—ã–∫–ª—é—á–µ–Ω",
        "track": "–ü–æ–≤—Ç–æ—Ä —Ç—Ä–µ–∫–∞",
        "queue": "–ü–æ–≤—Ç–æ—Ä –æ—á–µ—Ä–µ–¥–∏",
    }.get(mode.lower(), "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º")

    return discord.Embed(description=f"{mode_emoji} {mode_text}", color=Colors.SUCCESS)
